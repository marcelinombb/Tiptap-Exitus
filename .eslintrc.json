{
    "root": true,
    "env": {
      "es6": true
    },
    "globals": {},
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaVersion": "latest",
      "sourceType": "module"
    },
    "plugins": [
      "@typescript-eslint/eslint-plugin",
      "import-helpers",
      "prettier"
    ],
    "extends": [
      "plugin:import/errors",
      "plugin:@typescript-eslint/recommended"
    ],
    "rules": {
      "import/export": 0,
      "prettier/prettier": [
        "error",
        {
          "semi": false
        }
      ],
      "no-console": "warn",
      "camelcase": "warn",
      "@typescript-eslint/interface-name-prefix": "off",
      "@typescript-eslint/explicit-function-return-type": "off",
      "@typescript-eslint/no-empty-function": "off",
      "@typescript-eslint/explicit-module-boundary-types": "off",
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/ban-ts-comment": "off",
      "@typescript-eslint/no-this-alias": "off",
      "@typescript-eslint/no-unused-vars": [
        "warn",
        {
          "varsIgnorePattern": "^_",
          "argsIgnorePattern": "^_"
        }
      ],
      "import/no-unresolved": "error",
      "import-helpers/order-imports": [
        "warn",
        {
          "newlinesBetween": "always",
          "alphabetize": {
            "order": "asc",
            "ignoreCase": true
          }
        }
      ],
      "@typescript-eslint/consistent-type-imports": [
        "error",
        {
          "prefer": "type-imports",
          "disallowTypeAnnotations": true,
          "fixStyle": "inline-type-imports"
        }
      ],
      "consistent-return": [
        "error",
        {
          "treatUndefinedAsUnspecified": false
        }
      ],
      "sort-imports": [
        "warn",
        {
          "ignoreCase": true,
          "ignoreDeclarationSort": true,
          "ignoreMemberSort": false,
          "allowSeparatedGroups": true
        }
      ]
    },
   "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true, // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`

        // Choose from one of the "project" configs below or omit to use <root>/tsconfig.json by default

        // use <root>/path/to/folder/tsconfig.json
        "project": "./tsconfig.json"
      }
    }
  }
  }